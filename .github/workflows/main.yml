name: CI/CD for Python & React

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: windows-latest  # Using Windows runner

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # Python Setup
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13.1'

      - name: Install Python dependencies
        run: |
          python -m venv venv
          .\venv\Scripts\activate
          pip install -r backend/requirements.txt

      # React Setup
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install React dependencies
        run: |
          cd frontend
          npm install

      - name: Build React App
        run: |
          cd frontend
          npm run build
        # Check for errors in the build process
        continue-on-error: false  # Ensure it fails if build doesn't succeed

      - name: List frontend directory after build
        run: |
          cd frontend
          dir  # List files in the frontend directory to confirm build output

      # Create a .zip archive of the build folder
      - name: Create a .zip archive of the build folder
        run: |
          cd frontend
          powershell Compress-Archive -Path frontend\build\*
        # This will create the .zip file and store it in the root directory of the repository

      # Optional: Upload the .zip as an artifact
      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: myapp.zip  # Name of the zip artifact
          path: myapp.zip  # Path to the zip file in the root directory
          
      # Optional: Deployment step (you can configure this based on your deployment platform)
      - name: Deploy Application
        run: echo "Deployment Successful"
